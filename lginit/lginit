#!/bin/sh
# LGMOD version ver=
# Source code released under GPL License
# lginit/rcS for Saturn7 by mmm4m5m

# accepted config values: empty or non-empty
LGI_MENU=''
LGI_CHROOT=''; #sdb1/lgmod_s7.sqf
LGI_OVERLAY=''
LGINIT=''; # ''=rcS; <not empty>=lg-init; LGMOD=lg-init and LGMOD
USB=/tmp/lgmod/chrusb; CHR=/tmp/lgmod/chroot
MNT=/mnt/lg/user; RUN=$MNT/lgmod/init/lginit

OUT=/dev/kmsg; [ -e $OUT ] || OUT=/dev/stdout
DIR=/mnt/lg/lginit
export PATH=/sbin:/usr/sbin:/bin:/usr/bin


mount -t jffs2 /dev/mtdblock11 "$MNT" -o noatime > $OUT 2>&1
[ -f "$RUN" ] && { echo "lginit: Found $RUN" > $OUT; . "$RUN"; }

[ -d $MNT/lgmod ] && [ -z "$LGI_MENU" ] || {
	echo -n 'lginit: Menu ("X" to disable menu): Press any key for shell ...'
	for i in 3 2 1; do echo -n " $i"; if read -n1 -t1 r; then
		[ "$r" = X ] && { mkdir -p "$MNT/lgmod"; sync; }; sh; break
	fi; done; echo; }


DEV="/dev/${LGI_CHROOT%%/*}"; SQF="$USB/${LGI_CHROOT#*/}"
if [ -n "$LGI_CHROOT" ] && [ -b "$DEV" ]; then
	. $DIR/lginit-tmpfs
	if mkdir -p "$USB" > $OUT 2>&1; then
		echo "lginit: trying $DEV $SQF ..." > $OUT
		. $DIR/lginit-usercall1 0 10 > $OUT 2>&1
		if mount -t vfat -o iocharset=utf8,shortname=mixed,noatime "$DEV" "$USB" > $OUT 2>&1 ||
			mount -t ntfs -o noatime "$DEV" "$USB" > $OUT 2>&1; then
			if [ -f "$SQF" ]; then
				if mkdir -p "$CHR" > $OUT 2>&1 &&
					mount -t squashfs "$SQF" "$CHR" > $OUT 2>&1 &&
					mount -o bind $DIR "$CHR$DIR" > $OUT 2>&1; then
					{ echo "lginit: chroot $SQF ..."; mount -o bind /tmp "$CHR/tmp"
					mount -o bind / "$CHR$CHR"; mount -o bind "$USB" "$CHR$USB"
					umount -f "$MNT"; } > $OUT 2>&1
					exec chroot "$CHR" sh $DIR/lginit-overlay "$LGI_OVERLAY" "$LGINIT" chroot
					{ echo "lginit: Error $?"
					umount "$CHR$USB" "$CHR$CHR" "$CHR/tmp"; } > $OUT 2>&1
				fi; { umount "$CHR$DIR"; umount "$CHR" && rm -rf "$CHR"; } > $OUT 2>&1
			else echo "lginit: Error chroot $SQF" > $OUT
			fi; umount "$USB" > $OUT 2>&1
fi; fi; fi


. $DIR/lginit-overlay "$LGI_OVERLAY" "$LGINIT"

exec sh
exit 1
