#!/bin/sh
# Source code released under GPL License
# OpenLGTV BCM by xeros
# Modified for Saturn6/Saturn7 by mmm4m5m

# [chroot] [overlay]
# config values: empty or non-empty
RCS_SYSLOG=1; # 1=enable
RCS_NOREL=''
RCS_NOREL_ONCE=''
RCS_DELAY=15; # seconds delay before services
RCS_CRASHDOG=''; # ''=default; 0=disable; 1=enable/enforce
RUN=/mnt/lg/user/lgmod/init/rcS; BOOTMOD=/mnt/lg/user/lgmod/boot

export HOME=/mnt/lg/user/root
. /etc/init.d/rcS-lginit-env; # LG: env

. /etc/init.d/rcS-tmpfs

{ mkdir -p /tmp/var/log /tmp/var/run/tmux; f='/var/run/utmp /var/log/wtmp'
	touch /var/log/lastlog $f; chmod 0664 $f
	[ -f /bin/chown ] && chown :utmp $f; } > /dev/kmsg 2>&1


if [ -f "$BOOTMOD" ]; then
	echo "rcS: Found $BOOTMOD" > /dev/kmsg; . "$BOOTMOD"
	[ -n "$RCS_NOREL_ONCE" ] && { RCS_NOREL="$RCS_NOREL_ONCE"; sed -ie '/^RCS_NOREL_ONCE=/d' "$BOOTMOD" > /dev/kmsg 2>&1; }
	[ -n "$RCS_NOREL_ONCE" ] && sync > /dev/kmsg 2>&1
fi

[ "$RCS_SYSLOG" = 1 ] && [ -f /sbin/syslogd ] && syslogd -C16 > /dev/kmsg 2>&1

[ -f "$RUN-init" ] && { echo "rcS-exec: Found $RUN-init" > /dev/kmsg; . "$RUN-init"; }
. /etc/init.d/rcS-lginit; # LG: mount
[ -f "$RUN-mount" ] && { echo "rcS-exec: Found $RUN-mount" > /dev/kmsg; . "$RUN-mount"; }

if [ -d /mnt/lg/lginit ]; then # not S6 = S7
	[ -f /etc/init.d/rcS-nvram ] && . /etc/init.d/rcS-nvram
fi

setsid sh /etc/init.d/rcS-services "$RCS_DELAY" &


[ -n "$RCS_BREAK_CTRL_C" ] && { echo 'Note: Press "exit" to continue...'; sh; }

if [ -z "$RCS_NOREL" ] && [ "$RCS_CRASHDOG" != 0 ]; then
	. /etc/init.d/rcS-crashdog check "$RCS_CRASHDOG" || RCS_NOREL=1; fi

if [ -z "$RCS_NOREL" ]; then
	err=''; . /etc/init.d/release boot || err=$?
	if [ -z "$err" ]; then
		sleep 5; r=$(pgrep -f '^/mnt/lg/lgapp/RELEASE' | wc -l)
		[ "$r" -lt 2 ] && err=1; fi
	[ -n "$err" ] && {
		echo "rcS-release: Error $err ($Mode)" > /dev/kmsg
		. /etc/init.d/rcS-crashdog error
		exec sh; exit 1; }
fi

exit 0
