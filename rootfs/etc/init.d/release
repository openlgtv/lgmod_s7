#!/bin/sh
# Source code released under GPL License
# OPENRELEASE by rtokarev is licensed under BSD License
# rcS for Saturn7 by mmm4m5m

RCS_RELEASE="$2"; RCS_CRAMFS="$3"; Rtm="$4"
# $5='skip' - do not read config
# $6='skip' - do not replace RELEASE.cfg
RUN=/mnt/lg/user/lgmod/init/rcS

RBIN=/mnt/lg/lgapp/RELEASE

CONFIG() {
	[ "$6" = skip ] || RELCFG '' > /dev/kmsg 2>&1

	if [ "$5" != skip ]; then
		RCS_CRAMFS=1
		RCS_RELEASE=OPENREL-DAEMON; # in bg
		[ -f "$RUN" ] && . "$RUN"
		Rtm=''; (. /etc/init.d/rcS-release tm "$RCS_RELEASE") && Rtm=1
	fi

	START "$@"
}

RELCFG() {
	cfg=/mnt/lg/cmn_data/RELEASE.cfg; rdir=/mnt/lg/model; rcfg=$rdir/RELEASE.cfg
	[ -f "$cfg" ] || sed -e 's/^\(eDebugMode,\).*$/\1EVENT/' "$rcfg" > "$cfg"
	if [ "$1" = skip ]; then d=''; D=''
	else D=$(stat -c%D $rdir $rcfg); D=$(echo $D); d="${D%% *}"; D="${D#* }"; fi
	[ "$d" = "$D" ] && mount -o bind "$cfg" "$rcfg"

	cfg=/mnt/lg/cmn_data/openrelease_keymap.cfg; rdir=/etc/openrelease; rcfg=$rdir/openrelease_keymap.cfg
	if [ ! -f "$cfg" ]; then d=1; D=0
	elif [ "$1" = skip ]; then d=''; D=''
	else D=$(stat -c%D $rdir $rcfg); D=$(echo $D); d="${D%% *}"; D="${D#* }"; fi
	[ "$d" = "$D" ] && mount -o bind "$cfg" "$rcfg"
}

START() {
	[ -n "$Rtm" ] && if ! insmod /lib/modules/pty.ko > /dev/kmsg 2>&1; then
		lsmod | grep -q '^pty ' || { RCS_RELEASE=OPENREL-DAEMON; Rtm=''; }; fi
	if [ -n "$Rtm" ]; then
		. /etc/init.d/rcS-devrw > /dev/kmsg 2>&1 ||
			{ RCS_RELEASE=OPENREL-DAEMON; Rtm=''; }; # another bg <MODE> without tmux
	fi

	if [ ! -f "$RBIN" ]; then
		CRAMFS=''; [ -n "$RCS_CRAMFS" ] && CRAMFS=check
		[ -n "$CRAMFS" ] && . /etc/init.d/rcS-cramfs
		. /etc/init.d/rcS-lginit-cramfs "$CRAMFS"; # LG: mount cramfs
	fi
	. /etc/init.d/rcS-release run "$RCS_RELEASE"; # LG: RELEASE
}

boot() {
	RELCFG skip > /dev/kmsg 2>&1
	START "$@"
}

start() {
	pgrep -f "^$RBIN" && { echo 'release: Already started'; return 1; }
	/etc/init.d/mount stop
	/etc/init.d/release-mount stop
	CONFIG "$@"
	echo 'Note: After RELEASE mounts run: /etc/init.d/mount start && /etc/init.d/netcast-mount start'
}

restart() {
	CONFIG "$@"
}

case "$1" in
	boot)		boot "$@";;
	start)		start "$@";;
	restart)	restart "$@";;
	*)			echo "Usage: $0 start|restart [MODE] [CRAMFS] [RTM] [skip] [skip]"; exit 1
esac
