#!/bin/sh
# Source code released under GPL License
# rcS for Saturn6/Saturn7 by mmm4m5m, djpety

[ -n "$1" ] && { echo "rcS-services: $1" > /dev/kmsg; sleep "$1"; }

r=$(pgrep -f '^/mnt/lg/lgapp/RELEASE ' | wc -l)
[ "$r" -lt 2 ] && NOREL=1 || NOREL=''



if [ -z "$NOREL" ]; then
	. /etc/init.d/rcS-usercall1 call_wait > /dev/kmsg 2>&1; # wait USB (extroot)
else
	. /etc/init.d/release-mount boot; # init USB (extroot)
fi

# find extroot device and mount ext2/3 partition
EXTLINK=/mnt/lg/user/extroot; EXTCONF=/mnt/lg/user/lgmod/extroot
EXTMNT=/tmp/lgmod/extroot; EXTDEST=$EXTMNT/extroot; EXTDEV=''; EXTYPE=''
if [ ! -f $EXTCONF ]; then
	echo "rcS-services: Warning: not found $EXTCONF" > /dev/kmsg
elif [ ! -L $EXTLINK ] || [ "`readlink -f $EXTLINK" != $EXTDEST ]; then
	echo "rcS-services: Warning: not a sym.link to $EXTDEST ($EXTLINK)" > /dev/kmsg
else
	ID=`cat $EXTCONF`; EXTYPE="${ID%%:*}"; EXTDEV="${ID#*:}"; EXTDEV="${EXTDEV%%:*}"
fi
if [ -z "$EXTDEV" ] || [ -z "$EXTYPE" ]; then
	echo "rcS-services: Error: invalid config: $EXTCONF" > /dev/kmsg
else
	{ for i in /sys/block/sd?; do
		dev=${i##*/}; [ -d $i ] && [ -d $i/$dev$EXTDEV ] || continue
		id="`cat $i/device/vendor`"; id="`echo $id`"
		id="$id:`cat $i/device/../../../../serial`"
		id="$id:`cat $i/device/../../../../idVendor`"
		id="$id:`cat $i/device/../../../../idProduct`"
		[ "$ID" = "$EXTYPE:$EXTDEV:$id" ] || continue
		mount -o noatime -t $EXTYPE /dev/$dev$EXTDEV $EXTMNT ||
			echo "rcS-services: Error: extroot mount -t $EXTYPE /dev/$dev$EXTDEV"
		break
	done; } > /dev/kmsg 2>&1
fi

. /etc/init.d/rcS-services-env



. /etc/init.d/module boot; #&
. /etc/init.d/network boot
[ -f /etc/init.d/wireless ] && . /etc/init.d/wireless boot

# services from rootfs (network/wireless is started)
for i in telnetd ntpd dropbear; do
	# TODO: use sym.links /etc/rc.d/[SK]*
	. /etc/init.d/$i boot; #&
done



[ -z "$NOREL" ] && . /etc/init.d/mount wait; # wait for /mnt/usb?/Drive?

. /etc/init.d/mount boot
[ -z "$NOREL" ] &&
	if [ -d /mnt/lg/lginit ]; then # not S6 = S7
		[ -f /etc/init.d/netcast ] && . /etc/init.d/netcast boot
	fi

# services from extroot (usb1/Drive1 is available, ext3/nfs/cifs is mounted)
for i in httpd ftpd djmount; do
	# TODO: use sym.links /etc/rc.d/[SK]*
	. /etc/init.d/$i boot; #&
done

# auto_start.sh and 'auto update' LGMOD config from USB
for i in lgmod; do
	. /etc/init.d/$i boot
done
