#!/bin/sh
# Source code released under GPL License
# rcS for Saturn6/Saturn7 by mmm4m5m, djpety

if [ -d /mnt/lg/lginit ]; then # not S6 = S7
	RELBIN='^/mnt/lg/lgapp/RELEASE '; # pgrep
else
	RELBIN='./RELEASE'; # pgrep
fi

[ -n "$1" ] && { echo "rcS-services: $1" > /dev/kmsg; sleep "$1"; }

r=$(pgrep -f "$RELBIN" | wc -l)
[ "$r" -lt 2 ] && NOREL=1 || NOREL=''



if [ -z "$NOREL" ]; then
	. /etc/init.d/rcS-usercall1 call_wait > /dev/kmsg 2>&1; # wait USB (extroot)
else
	. /etc/init.d/release-mount boot; # init USB (extroot)
fi

# find extroot device and mount ext2/3 partition
EXTLINK=/mnt/lg/user/extroot; EXTCONF=/mnt/lg/user/lgmod/extroot
EXTMNT=/tmp/lgmod/extroot; EXTDEV=''; EXTYPE=''

if [ ! -f $EXTCONF ]; then
	echo "rcS-services: Warning: not found: $EXTCONF" > /dev/kmsg
elif [ ! -L $EXTLINK ]; then
	echo "rcS-services: Warning: not a sym.link: $EXTLINK" > /dev/kmsg
else
	ID=`cat $EXTCONF`; EXTYPE="${ID%%:*}"; EXTDEV="${ID#*:}"; EXTDEV="${EXTDEV%%:*}"
	[ "$EXTYPE" = ext3 ] && modprobe jbd
	modprobe "$EXTYPE" && mkdir -p $EXTMNT || { EXTYPE=''; EXTDEV=''; }
	[ -n "$EXTDEV" ] && [ -n "$EXTYPE" ] ||
		echo "rcS-services: Error: invalid config: $EXTCONF" > /dev/kmsg
fi

[ -n "$EXTDEV" ] && [ -n "$EXTYPE" ] && {
	for i in /sys/block/sd?; do
		dev=${i##*/}; [ -d $i ] && [ -d "$i/$dev$EXTDEV" ] || continue
		id="`cat $i/device/vendor`"; id="`echo $id`"
		id="$id:`cat $i/device/../../../../serial`"
		id="$id:`cat $i/device/../../../../idVendor`"
		id="$id:`cat $i/device/../../../../idProduct`"
		[ "$ID" = "$EXTYPE:$EXTDEV:$id" ] || continue; dev="/dev/$dev$EXTDEV"

		mount -o noatime -t "$EXTYPE" "$dev" $EXTMNT ||
			echo "rcS-services: Error: extroot mount -t $EXTYPE $dev"
		break
	done
	[ "$ID" = "$EXTYPE:$EXTDEV:$id" ] ||
		echo "rcS-services: Error: extroot device not found: $ID"
	} > /dev/kmsg 2>&1

. /etc/init.d/rcS-services-env



. /etc/init.d/module boot; #&
. /etc/init.d/network boot
[ -f /etc/init.d/wireless ] && . /etc/init.d/wireless boot

# services from rootfs (network/wireless is started)
for i in telnetd ntpd dropbear; do
	# TODO: use sym.links /etc/rc.d/[SK]*
	. /etc/init.d/$i boot; #&
done



[ -z "$NOREL" ] && . /etc/init.d/mount wait; # wait for /mnt/usb?/Drive?

. /etc/init.d/mount boot
[ -z "$NOREL" ] &&
	if [ -d /mnt/lg/lginit ]; then # not S6 = S7
		[ -f /etc/init.d/netcast ] && . /etc/init.d/netcast boot
	fi

# services from extroot (usb1/Drive1 is available, ext3/nfs/cifs is mounted)
for i in httpd ftpd djmount; do
	# TODO: use sym.links /etc/rc.d/[SK]*
	. /etc/init.d/$i boot; #&
done

# auto_start.sh and 'auto update' LGMOD config from USB
for i in lgmod; do
	. /etc/init.d/$i boot
done
