#!/bin/sh
# Source code released under GPL License
# rcS for Saturn6/Saturn7 by mmm4m5m, djpety

if [ -d /mnt/lg/lginit ]; then # not S6 = S7
	RELBIN='^/mnt/lg/lgapp/RELEASE '; # pgrep
else
	RELBIN='./RELEASE'; # pgrep
fi

[ -n "$1" ] && { echo "rcS-services: $1" > /dev/kmsg; sleep "$1"; }

pgrep -f "$RELBIN" >/dev/null && NOREL='' || NOREL=1

. /etc/init.d/rcS-funcs; # wait_drives, load_modules, device_by_id


if [ -z "$NOREL" ]; then
	. /etc/init.d/rcS-usercall1 call_wait > /dev/kmsg 2>&1; # wait USB (extroot)
else
	. /etc/init.d/release-mount boot; # init USB (extroot)
fi

{
# extroot: find device and mount
EXTLINK=/mnt/lg/user/extroot; EXTCONF=/mnt/lg/user/lgmod/extroot
EXTMNT=/tmp/lgmod/extroot; EXTDEV=''; EXTYPE=''
if [ ! -h $EXTLINK ]; then echo "rcS-services: Note: not a sym.link: $EXTLINK"
elif [ ! -f $EXTCONF ]; then echo "rcS-services: Warning: not found: $EXTCONF"
else
	ID=`cat $EXTCONF`; EXTYPE="${ID%%:*}"; EXTDEV="${ID#*:}"; EXTDEV="${EXTDEV%%:*}"
	[ -n "$EXTDEV" ] && [ -n "$EXTYPE" ] &&
		load_modules "rcS-services: extroot" "$EXTYPE" && mkdir -p $EXTMNT || EXTYPE=''
	if [ -n "$EXTYPE" ]; then
		dev=`device_by_id "$ID" "$EXTDEV" "$EXTYPE"`
		if [ -z "$dev" ]; then echo "rcS-services: Error: extroot device not found: $ID"
		else mount -o noatime -t "$EXTYPE" "/dev/$dev$EXTDEV" $EXTMNT; fi
	else echo "rcS-services: Error: invalid config: $EXTCONF"; fi
fi

if [ ! -d /mnt/lg/lginit ]; then # S6
	# prepare S6 /lib
	f=/mnt/lg/lgapp/lib/ld-uClibc.so.0
	. /etc/init.d/rcS-funcs; # mount_readwrite
	mount_readwrite 'rcS-services' /lib &&
		if [ -f $f ]; then ln -s $f /lib/
		else echo "rcS-services: Note: not found: $f"; fi
fi
} > /dev/kmsg 2>&1

. /etc/init.d/rcS-services-env



. /etc/init.d/module boot; #&
. /etc/init.d/network boot
[ -f /etc/init.d/wireless ] && . /etc/init.d/wireless boot

# services from rootfs (network/wireless is started)
for i in telnetd ntpd dropbear; do
	# TODO: use sym.links /etc/rc.d/[SK]*
	. /etc/init.d/$i boot; #&
done


[ -z "$NOREL" ] && wait_drives 'rcS-services' > /dev/kmsg 2>&1; # wait for /mnt/usb#/Drive#

. /etc/init.d/mount boot
[ -z "$NOREL" ] &&
	if [ -d /mnt/lg/lginit ]; then # not S6 = S7
		[ -f /etc/init.d/netcast ] && . /etc/init.d/netcast boot
	fi

# services from extroot (usb1/Drive1 is available, ext3/nfs/cifs is mounted)
for i in httpd ftpd djmount; do
	# TODO: use sym.links /etc/rc.d/[SK]*
	. /etc/init.d/$i boot; #&
done

# auto_start.sh and 'auto update' LGMOD config from USB
for i in lgmod; do
	. /etc/init.d/$i boot
done
